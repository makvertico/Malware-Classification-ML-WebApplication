from io import FileIO
from flask import *
import os
from werkzeug.utils import secure_filename

from ml_scripts.pe_extract import extractDatatoCSV
from ml_scripts.remove import removeFiles
from ml_scripts.predict import runModel

#Malware Web Application
app = Flask(__name__, static_url_path="/static")

# Create downloads folder when setting up the app
os.makedirs(os.path.join(app.instance_path, 'downloads'), exist_ok=True)
os.makedirs(os.path.join(app.instance_path, 'result'), exist_ok=True)
os.makedirs(os.path.join(app.instance_path, 'testCSV'), exist_ok=True)


@app.route("/")
def homePage():
    return app.send_static_file('index.html')


@app.route('/submit', methods=['POST'])
def success():
    if request.method == 'POST':
        f = request.files['file']

        # remove previous files
        removeFiles()

        # save new file
        f.save(os.path.join(app.instance_path,
                            'downloads', secure_filename(f.filename)))

        if extractDatatoCSV():
            print("Success")
            df = runModel()

            # save data-frame to json
            df.to_json(r'instance/result/result.json')

            print(jsonify(df.to_json()), 200)

            # read file
            with open('./instance/result/result.json', 'r') as myfile:
                myJSONdata = myfile.read()

            return render_template('result.html', title="page", jsonfile=json.dumps(myJSONdata))

            # return render_template('data.html',  tables=[df.to_html(classes='data')], titles=df.columns.values, index=False)
            # return jsonify(df.to_json()), 200
            # return render_template('result.html')

        else:
            print("Failed")
            return app.send_static_file('index.html')


if __name__ == "__main__":
    app.run(debug=False)